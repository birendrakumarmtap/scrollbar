{"ast":null,"code":"var _jsxFileName = \"/home/birendra/myapp/src/Renderlist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Renderlist = props => {\n  _s();\n\n  const [list, setList] = useState([]);\n  const [listf, setListf] = useState([]);\n  const [offset, setOffset] = useState(10);\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/posts').then(res => res.json()).then(result => {\n      const arrf = result.map(item => {\n        return item.title;\n      });\n      setList([...arrf]);\n      setListf([...arrf.slice(0, offset)]);\n      console.log(document.body.clientHeight, document.body.scrollTop, document.body.scrollHeight);\n    });\n    document.addEventListener(\"scroll\", () => {\n      if (document.body.scrollTop + document.body.clientHeight >= document.body.scrollHeight) {\n        setOffset(offset + 10);\n        const arr = list.slice(0, offset);\n        setListf([...arr]);\n      }\n    });\n  }, []); // if(document.body.clientHeight+document.body.scrollTop)\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"hi\", {\n      children: \"RenderList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: listf.map((item, idx) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, Math.random(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 34\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, Math.random(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, Math.random(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, Math.random(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: idx + 1\n              }, Math.random(), false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item\n              }, Math.random(), false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 41\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Renderlist, \"uXs02WFI+0/xk/qvGGZl/EgT9G8=\");\n\n_c = Renderlist;\nexport default Renderlist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Renderlist\");","map":{"version":3,"sources":["/home/birendra/myapp/src/Renderlist.js"],"names":["React","useState","useEffect","Renderlist","props","list","setList","listf","setListf","offset","setOffset","fetch","then","res","json","result","arrf","map","item","title","slice","console","log","document","body","clientHeight","scrollTop","scrollHeight","addEventListener","arr","idx","Math","random"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;;;;AAIA,MAAMC,UAAU,GAAGC,KAAD,IAAS;AAAA;;AACvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AAGFC,EAAAA,SAAS,CAAC,MAAI;AACZS,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACOC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADf,EAECF,IAFD,CAEOG,MAAD,IAAY;AACd,YAAMC,IAAI,GAAGD,MAAM,CAACE,GAAP,CAAYC,IAAD,IAAU;AAC9B,eAAOA,IAAI,CAACC,KAAZ;AACH,OAFY,CAAb;AAGAb,MAAAA,OAAO,CAAC,CAAC,GAAGU,IAAJ,CAAD,CAAP;AACAR,MAAAA,QAAQ,CAAC,CAAC,GAAGQ,IAAI,CAACI,KAAL,CAAW,CAAX,EAAcX,MAAd,CAAJ,CAAD,CAAR;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACC,IAAT,CAAcC,YAA1B,EAAuCF,QAAQ,CAACC,IAAT,CAAcE,SAArD,EAA+DH,QAAQ,CAACC,IAAT,CAAcG,YAA7E;AACH,KATD;AAWAJ,IAAAA,QAAQ,CAACK,gBAAT,CAA0B,QAA1B,EAAqC,MAAI;AACjC,UACIL,QAAQ,CAACC,IAAT,CAAcE,SAAd,GAA0BH,QAAQ,CAACC,IAAT,CAAcC,YAAxC,IACAF,QAAQ,CAACC,IAAT,CAAcG,YAFlB,EAGE;AACEjB,QAAAA,SAAS,CAACD,MAAM,GAAG,EAAV,CAAT;AAEA,cAAMoB,GAAG,GAAGxB,IAAI,CAACe,KAAL,CAAW,CAAX,EAAcX,MAAd,CAAZ;AACAD,QAAAA,QAAQ,CAAC,CAAC,GAAGqB,GAAJ,CAAD,CAAR;AACH;AACF,KAVP;AAaD,GAzBQ,EAyBP,EAzBO,CAAT,CANyB,CAkC1B;;AAIG,sBACK;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAGA;AAAA,6BACO;AAAA,kBAEQtB,KAAK,CAACU,GAAN,CAAU,CAACC,IAAD,EAAOY,GAAP,KAAe;AACrB,8BACI;AAAA,oCACC,kBAASC,IAAI,CAACC,MAAL,EAAT;AAAA;AAAA;AAAA;AAAA,oBADD,eAEI,kBAASD,IAAI,CAACC,MAAL,EAAT;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI,kBAASD,IAAI,CAACC,MAAL,EAAT;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII,kBAASD,IAAI,CAACC,MAAL,EAAT;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAA,sCACI;AAAA,0BAAyBF,GAAG,GAAG;AAA/B,iBAASC,IAAI,CAACC,MAAL,EAAT;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA,0BAAyBd;AAAzB,iBAASa,IAAI,CAACC,MAAL,EAAT;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA,eAAmBF,GAAnB;AAAA;AAAA;AAAA;AAAA,oBALJ;AAAA,0BADJ;AAYH,SAbD;AAFR;AAAA;AAAA;AAAA;AAAA;AADP;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA,kBADL;AA4BH,CAlED;;GAAM3B,U;;KAAAA,U;AAoEN,eAAeA,UAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\n\n\n\nconst Renderlist= (props)=>{\n    const [list, setList] = useState([]);\n    const [listf, setListf] = useState([]);\n    const [offset, setOffset] = useState(10);\n     \n\n  useEffect(()=>{\n    fetch('https://jsonplaceholder.typicode.com/posts')\n    .then((res) => res.json())\n    .then((result) => {\n        const arrf = result.map((item) => {\n            return item.title;\n        })\n        setList([...arrf]);\n        setListf([...arrf.slice(0, offset)])\n        console.log(document.body.clientHeight,document.body.scrollTop,document.body.scrollHeight);\n    })\n\n    document.addEventListener(\"scroll\" , ()=>{\n            if (\n                document.body.scrollTop + document.body.clientHeight >=\n                document.body.scrollHeight\n            ) {\n                setOffset(offset + 10);\n\n                const arr = list.slice(0, offset);\n                setListf([...arr]);\n            }\n          });\n    \n\n  },[])\n\n  \n // if(document.body.clientHeight+document.body.scrollTop)\n\n\n\n    return (\n         <>\n         <hi>RenderList</hi>\n\n         <table >\n                <tbody>\n                    {\n                        listf.map((item, idx) => {\n                            return (\n                                <>\n                                 <br key={Math.random()} />\n                                    <br key={Math.random()} />\n                                    <br key={Math.random()} />\n                                    <br key={Math.random()} />\n                                    <tr key={idx} key={idx}>\n                                        <td key={Math.random()}>{idx + 1}</td>\n                                        <td key={Math.random()}>{item}</td>\n                                    </tr>\n                                </>\n                            )\n                        })\n                    }\n                </tbody>\n            </table>\n       \n\n         </>\n    )\n}\n\nexport default Renderlist;"]},"metadata":{},"sourceType":"module"}