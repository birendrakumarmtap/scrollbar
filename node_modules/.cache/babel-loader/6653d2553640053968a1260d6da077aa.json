{"ast":null,"code":"var _jsxFileName = \"/home/birendra/myapp/src/Renderlist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Renderlist = props => {\n  _s();\n\n  const [list, setList] = useState([]);\n  const [listf, setListf] = useState([]);\n  const [offset, setOffset] = useState(10); //   document.getElementById('scrollid')[0].addEventListener('scroll',()=>{\n  //     console.log(document.body.clientHeight,document.body.scrollTop, document.body.scrollHeight);\n  //   },true)\n  //   document.addEventListener('scroll',(e)=>{\n  //       console.log(window.scrollY);\n  //     //console.log(document.body.clientHeight,document.body.scrollTop, document.body.scrollHeight);\n  //   },true)\n\n  document.body.onScroll = e => {\n    console.log(e);\n  };\n\n  const onScrollCheck = e => {\n    console.log(e.target.clientHeight, e.target.scrollTop, e.target.scrollHeight);\n  };\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/posts').then(res => res.json()).then(result => {\n      const arrf = result.map(item => {\n        return item.title;\n      });\n      setList([...arrf]);\n      setListf([...arrf.slice(0, offset)]);\n      console.log(document.body.clientHeight, document.body.scrollTop, document.body.scrollHeight);\n    });\n  }, []); // if(document.body.clientHeight+document.body.scrollTop)\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"hi\", {\n      children: \"RenderList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"scrollid\",\n      onScroll: onScrollCheck,\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: listf.map((item, idx) => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"br\", {}, Math.random(), false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, Math.random(), false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, Math.random(), false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, Math.random(), false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: idx + 1\n                }, Math.random(), false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item\n                }, Math.random(), false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 41\n                }, this)]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Renderlist, \"uXs02WFI+0/xk/qvGGZl/EgT9G8=\");\n\n_c = Renderlist;\nexport default Renderlist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Renderlist\");","map":{"version":3,"sources":["/home/birendra/myapp/src/Renderlist.js"],"names":["React","useState","useEffect","Renderlist","props","list","setList","listf","setListf","offset","setOffset","document","body","onScroll","e","console","log","onScrollCheck","target","clientHeight","scrollTop","scrollHeight","fetch","then","res","json","result","arrf","map","item","title","slice","idx","Math","random"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;AAIA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC,CAH0B,CAK9B;AACA;AAEA;AAGA;AACA;AAEA;AAEA;;AAIAU,EAAAA,QAAQ,CAACC,IAAT,CAAcC,QAAd,GAA0BC,CAAD,IAAK;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACN,GAFD;;AAOC,QAAMG,aAAa,GAAIH,CAAD,IAAK;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACI,MAAF,CAASC,YAArB,EAAkCL,CAAC,CAACI,MAAF,CAASE,SAA3C,EAAsDN,CAAC,CAACI,MAAF,CAASG,YAA/D;AACF,GAFD;;AAOGnB,EAAAA,SAAS,CAAC,MAAM;AACZoB,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACKC,IADL,CACWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADnB,EAEKF,IAFL,CAEWG,MAAD,IAAY;AACd,YAAMC,IAAI,GAAGD,MAAM,CAACE,GAAP,CAAYC,IAAD,IAAU;AAC9B,eAAOA,IAAI,CAACC,KAAZ;AACH,OAFY,CAAb;AAGAxB,MAAAA,OAAO,CAAC,CAAC,GAAGqB,IAAJ,CAAD,CAAP;AACAnB,MAAAA,QAAQ,CAAC,CAAC,GAAGmB,IAAI,CAACI,KAAL,CAAW,CAAX,EAActB,MAAd,CAAJ,CAAD,CAAR;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACC,IAAT,CAAcO,YAA1B,EAAuCR,QAAQ,CAACC,IAAT,CAAcQ,SAArD,EAAgET,QAAQ,CAACC,IAAT,CAAcS,YAA9E;AAEH,KAVL;AAaH,GAdQ,EAcN,EAdM,CAAT,CAlC0B,CAoD1B;;AAIA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,EAAE,EAAC,UAAR;AAAmB,MAAA,QAAQ,EAAEJ,aAA7B;AAAA,6BAEA;AAAA,+BACI;AAAA,oBAEOV,KAAK,CAACqB,GAAN,CAAU,CAACC,IAAD,EAAOG,GAAP,KAAe;AACpB,gCACI;AAAA,sCACI,kBAASC,IAAI,CAACC,MAAL,EAAT;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,kBAASD,IAAI,CAACC,MAAL,EAAT;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI,kBAASD,IAAI,CAACC,MAAL,EAAT;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII,kBAASD,IAAI,CAACC,MAAL,EAAT;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAKI;AAAA,wCACI;AAAA,4BAAyBF,GAAG,GAAG;AAA/B,mBAASC,IAAI,CAACC,MAAL,EAAT;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA,4BAAyBL;AAAzB,mBAASI,IAAI,CAACC,MAAL,EAAT;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA,iBAAmBF,GAAnB;AAAA;AAAA;AAAA;AAAA,sBALJ;AAAA,4BADJ;AAaH,WAdF;AAFP;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAkCH,CA1FD;;GAAM7B,U;;KAAAA,U;AA4FN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\n\n\nconst Renderlist = (props) => {\n    const [list, setList] = useState([]);\n    const [listf, setListf] = useState([]);\n    const [offset, setOffset] = useState(10);\n\n//   document.getElementById('scrollid')[0].addEventListener('scroll',()=>{\n//     console.log(document.body.clientHeight,document.body.scrollTop, document.body.scrollHeight);\n\n//   },true)\n\n\n//   document.addEventListener('scroll',(e)=>{\n//       console.log(window.scrollY);\n       \n//     //console.log(document.body.clientHeight,document.body.scrollTop, document.body.scrollHeight);\n\n//   },true)\n\n\n\ndocument.body.onScroll = (e)=>{\n       console.log(e);\n}\n \n\n\n\n const onScrollCheck = (e)=>{\n    console.log(e.target.clientHeight,e.target.scrollTop, e.target.scrollHeight);\n }\n\n\n\n\n    useEffect(() => {\n        fetch('https://jsonplaceholder.typicode.com/posts')\n            .then((res) => res.json())\n            .then((result) => {\n                const arrf = result.map((item) => {\n                    return item.title;\n                })\n                setList([...arrf]);\n                setListf([...arrf.slice(0, offset)])\n                console.log(document.body.clientHeight,document.body.scrollTop, document.body.scrollHeight);\n\n            })\n\n\n    }, [])\n\n\n\n    // if(document.body.clientHeight+document.body.scrollTop)\n\n\n\n    return (\n        <>\n            <hi>RenderList</hi>\n            <div id=\"scrollid\" onScroll={onScrollCheck}>\n            { \n            <table >\n                <tbody>\n                    {\n                       listf.map((item, idx) => {\n                            return (\n                                <>\n                                    <br key={Math.random()} />\n                                    <br key={Math.random()} />\n                                    <br key={Math.random()} />\n                                    <br key={Math.random()} />\n                                    <tr key={idx} key={idx}>\n                                        <td key={Math.random()}>{idx + 1}</td>\n                                        <td key={Math.random()}>{item}</td>\n                                    </tr>\n                                </>\n                            )\n\n                        })\n                   \n                    }\n                </tbody>\n         \n            </table>   }\n                        </div>\n\n\n\n        </>\n    )\n}\n\nexport default Renderlist;"]},"metadata":{},"sourceType":"module"}