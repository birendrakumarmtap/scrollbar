{"ast":null,"code":"var _jsxFileName = \"/home/birendra/myapp/src/Scrollbar.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Scrollbar = props => {\n  _s();\n\n  (function (doc) {\n    'use strict';\n\n    window.onscroll = function (event) {\n      if (isEndOfElement(doc.body)) {\n        sendNewEvent('end-of-page-reached');\n      }\n    };\n\n    function isEndOfElement(element) {\n      //visible height + pixel scrolled = total height \n      return element.offsetHeight + element.scrollTop >= element.scrollHeight;\n    }\n\n    function sendNewEvent(eventName) {\n      var event = doc.createEvent('Event');\n      event.initEvent(eventName, true, true);\n      doc.dispatchEvent(event);\n    }\n  })(document);\n\n  const [list, setList] = useState([]);\n  const [listf, setListf] = useState([]);\n  const [offset, setOffset] = useState(10);\n  document.addEventListener('end-of-page-reached', function () {\n    console.log('you reached the end of the page');\n    setOffset(offset + 10);\n    setListfinal(offset);\n  });\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/posts').then(res => res.json()).then(result => {\n      const arrf = result.map(item => {\n        return item.title;\n      });\n      setList([...arrf]);\n      setListf([...arrf.slice(0, 10)]);\n    });\n  }, []);\n  useEffect(() => {\n    const arr = list.slice(0, offset);\n    setListf([...arr]);\n  }, [offset]);\n\n  function setListfinal(offset) {\n    const arr = list.slice(0, offset);\n    setListf([...arr]);\n  }\n\n  const getnewData = id => {\n    if (id === offset) {\n      setOffset(offset + 10);\n      setListfinal(offset);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" scrollbar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: listf.map((item, idx) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, Math.random(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, Math.random(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: idx + 1\n              }, Math.random(), false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item\n              }, Math.random(), false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 41\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Scrollbar, \"ZEs0inN5qDO510C3cPhr56OQM4k=\");\n\n_c = Scrollbar;\nexport default Scrollbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Scrollbar\");","map":{"version":3,"sources":["/home/birendra/myapp/src/Scrollbar.js"],"names":["React","useEffect","useState","Scrollbar","props","doc","window","onscroll","event","isEndOfElement","body","sendNewEvent","element","offsetHeight","scrollTop","scrollHeight","eventName","createEvent","initEvent","dispatchEvent","document","list","setList","listf","setListf","offset","setOffset","addEventListener","console","log","setListfinal","fetch","then","res","json","result","arrf","map","item","title","slice","arr","getnewData","id","idx","Math","random"],"mappings":"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","sourcesContent":["import { React, useEffect, useState } from 'react';\n\nconst Scrollbar = (props) => {\n\n\n\n\n    (function (doc) {\n        'use strict';\n\n        window.onscroll = function (event) {\n            if (isEndOfElement(doc.body)) {\n                sendNewEvent('end-of-page-reached');\n            }\n        };\n\n        function isEndOfElement(element) {\n            //visible height + pixel scrolled = total height \n            return element.offsetHeight + element.scrollTop >= element.scrollHeight;\n        }\n\n        function sendNewEvent(eventName) {\n            var event = doc.createEvent('Event');\n            event.initEvent(eventName, true, true);\n            doc.dispatchEvent(event);\n        }\n    }(document));\n\n\n\n\n  \n\n\n\n\n\n    const [list, setList] = useState([]);\n    const [listf, setListf] = useState([]);\n    const [offset, setOffset] = useState(10)\n\n    document.addEventListener('end-of-page-reached', function(){\n        console.log('you reached the end of the page');\n\n        setOffset(offset + 10);\n        setListfinal(offset)\n    });\n\n\n\n\n    useEffect(() => {\n\n        fetch('https://jsonplaceholder.typicode.com/posts')\n            .then((res) => res.json())\n            .then((result) => {\n                const arrf = result.map((item) => {\n                    return item.title;\n                })\n                setList([...arrf]);\n                setListf([...arrf.slice(0, 10)])\n\n            })\n    }, []);\n\n    useEffect(() => {\n\n        const arr = list.slice(0, offset);\n        setListf([...arr]);\n\n    }, [offset]);\n\n\n    function setListfinal(offset) {\n        const arr = list.slice(0, offset);\n        setListf([...arr]);\n    }\n\n    const getnewData = (id) => {\n\n        if (id === offset) {\n            setOffset(offset + 10);\n            setListfinal(offset)\n        }\n\n    }\n\n    return (\n        <>\n            <h1> scrollbar</h1>\n            <table >\n                <tbody>\n                    {\n                        listf.map((item, idx) => {\n                            return (\n                                <>\n                                    <br key={Math.random()}/>\n                                    <br key={Math.random()} />\n                                    <tr key={idx}  key={idx}>\n                                        <td key={Math.random()}>{idx + 1}</td>\n                                        <td key={Math.random()}>{item}</td>\n                                    </tr>\n                                </>\n                            )\n                        })\n                    }\n                </tbody>\n            </table>\n        </>\n    )\n}\n\nexport default Scrollbar;"]},"metadata":{},"sourceType":"module"}