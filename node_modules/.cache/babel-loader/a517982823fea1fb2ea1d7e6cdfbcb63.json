{"ast":null,"code":"var _jsxFileName = \"/home/birendra/myapp/src/Renderlist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Renderlist = props => {\n  _s();\n\n  const [list, setList] = useState([]);\n  const [listf, setListf] = useState([]);\n  const [offset, setOffset] = useState(10);\n  document.addEventListener('scroll', () => {\n    console.log(document.body.clientHeight, document.body.scrollTop, document.body.scrollHeight);\n  });\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/posts').then(res => res.json()).then(result => {\n      const arrf = result.map(item => {\n        return item.title;\n      });\n      setList([...arrf]);\n      setListf([...arrf.slice(0, offset)]);\n      console.log(document.body.clientHeight, document.body.scrollTop, document.body.scrollHeight);\n    });\n  }, []); // if(document.body.clientHeight+document.body.scrollTop)\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"hi\", {\n      children: \"RenderList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: listf.map((item, idx) => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"br\", {}, Math.random(), false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, Math.random(), false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, Math.random(), false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, Math.random(), false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: idx + 1\n                }, Math.random(), false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item\n                }, Math.random(), false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 41\n                }, this)]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Renderlist, \"uXs02WFI+0/xk/qvGGZl/EgT9G8=\");\n\n_c = Renderlist;\nexport default Renderlist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Renderlist\");","map":{"version":3,"sources":["/home/birendra/myapp/src/Renderlist.js"],"names":["React","useState","useEffect","Renderlist","props","list","setList","listf","setListf","offset","setOffset","document","addEventListener","console","log","body","clientHeight","scrollTop","scrollHeight","fetch","then","res","json","result","arrf","map","item","title","slice","idx","Math","random"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;AAIA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AAEFU,EAAAA,QAAQ,CAACC,gBAAT,CAA0B,QAA1B,EAAmC,MAAI;AACrCC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAAT,CAAcC,YAA1B,EAAuCL,QAAQ,CAACI,IAAT,CAAcE,SAArD,EAAgEN,QAAQ,CAACI,IAAT,CAAcG,YAA9E;AAED,GAHD;AAKEhB,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACKC,IADL,CACWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADnB,EAEKF,IAFL,CAEWG,MAAD,IAAY;AACd,YAAMC,IAAI,GAAGD,MAAM,CAACE,GAAP,CAAYC,IAAD,IAAU;AAC9B,eAAOA,IAAI,CAACC,KAAZ;AACH,OAFY,CAAb;AAGArB,MAAAA,OAAO,CAAC,CAAC,GAAGkB,IAAJ,CAAD,CAAP;AACAhB,MAAAA,QAAQ,CAAC,CAAC,GAAGgB,IAAI,CAACI,KAAL,CAAW,CAAX,EAAcnB,MAAd,CAAJ,CAAD,CAAR;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAAT,CAAcC,YAA1B,EAAuCL,QAAQ,CAACI,IAAT,CAAcE,SAArD,EAAgEN,QAAQ,CAACI,IAAT,CAAcG,YAA9E;AAEH,KAVL;AAaH,GAdQ,EAcN,EAdM,CAAT,CAV0B,CA4B1B;;AAIA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAA,6BACI;AAAA,+BAEQ;AAAA,oBACCX,KAAK,CAACkB,GAAN,CAAU,CAACC,IAAD,EAAOG,GAAP,KAAe;AACtB,gCACI;AAAA,sCACI,kBAASC,IAAI,CAACC,MAAL,EAAT;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,kBAASD,IAAI,CAACC,MAAL,EAAT;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI,kBAASD,IAAI,CAACC,MAAL,EAAT;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII,kBAASD,IAAI,CAACC,MAAL,EAAT;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAKI;AAAA,wCACI;AAAA,4BAAyBF,GAAG,GAAG;AAA/B,mBAASC,IAAI,CAACC,MAAL,EAAT;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA,4BAAyBL;AAAzB,mBAASI,IAAI,CAACC,MAAL,EAAT;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA,iBAAmBF,GAAnB;AAAA;AAAA;AAAA;AAAA,sBALJ;AAAA,4BADJ;AAaH,WAdA;AADD;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADJ;AAgCH,CAhED;;GAAM1B,U;;KAAAA,U;AAkEN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\n\n\nconst Renderlist = (props) => {\n    const [list, setList] = useState([]);\n    const [listf, setListf] = useState([]);\n    const [offset, setOffset] = useState(10);\n\n  document.addEventListener('scroll',()=>{\n    console.log(document.body.clientHeight,document.body.scrollTop, document.body.scrollHeight);\n\n  })\n\n    useEffect(() => {\n        fetch('https://jsonplaceholder.typicode.com/posts')\n            .then((res) => res.json())\n            .then((result) => {\n                const arrf = result.map((item) => {\n                    return item.title;\n                })\n                setList([...arrf]);\n                setListf([...arrf.slice(0, offset)])\n                console.log(document.body.clientHeight,document.body.scrollTop, document.body.scrollHeight);\n\n            })\n\n\n    }, [])\n\n\n\n    // if(document.body.clientHeight+document.body.scrollTop)\n\n\n\n    return (\n        <>\n            <hi>RenderList</hi>\n\n            <table >\n                <tbody>\n                    {\n                        <div>\n                       { listf.map((item, idx) => {\n                            return (\n                                <>\n                                    <br key={Math.random()} />\n                                    <br key={Math.random()} />\n                                    <br key={Math.random()} />\n                                    <br key={Math.random()} />\n                                    <tr key={idx} key={idx}>\n                                        <td key={Math.random()}>{idx + 1}</td>\n                                        <td key={Math.random()}>{item}</td>\n                                    </tr>\n                                </>\n                            )\n\n                        })\n                    }\n                        </div>\n                    }\n                </tbody>\n            </table>\n\n\n        </>\n    )\n}\n\nexport default Renderlist;"]},"metadata":{},"sourceType":"module"}